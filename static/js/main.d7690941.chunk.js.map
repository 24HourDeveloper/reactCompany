{"version":3,"sources":["actions/companyActions.js","actions/types.js","components/Modal.js","components/Company.js","components/CompanyForm.js","reducers/inputReducer.js","companies.js","reducers/index.js","App.js","serviceWorker.js","index.js"],"names":["selectStatus","input","type","payload","editCompany","e","id","preventDefault","Modal","renderModal","_this","props","modalName","react_default","a","createElement","style","styles","container","className","isOpen","titlebottomPad","react_chartjs_2_es","data","labels","datasets","label","backgroundColor","options","scales","yAxes","ticks","beginAtZero","onClick","closeModal","event","close","placeholder","name","value","mName","onChange","text","mNameInput","target","mInfo","mInfoInput","mContact","mContactInput","statusContainer","statusStyle","dropdownStyle","selection","status","map","item","index","key","console","log","this","Component","connect","state","company","_ref2","position","top","bottom","width","paddingTop","paddingLeft","marginBottom","display","fontSize","padding","borderWidth","borderColor","Company","statusColor","_this2","companies","elementBottomPad","companyName","textContainer","companyInfo","keyContacts","openModal","eraseCompany","_ref","margin","textAlign","lineHeight","paddingBottom","CompanyForm","_this$props","info","contact","revenue","stat","Fragment","bottomPad","nameInput","infoInput","contactInput","revenueInput","split","Number","dropdown","addCompany","components_Company","components_Modal","newCompany","length","financialPerformance","concat","borderRightStyle","borderRightColor","borderRightWidth","INITIAL_STATE","combineReducers","arguments","undefined","action","Object","objectSpread","filter","obj","store","createStore","reducers","App","es","components_CompanyForm","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d7690941.chunk.js","sourcesContent":["import {\r\n  NAME_INPUT,\r\n  INFO_INPUT,\r\n  CONTACT_INPUT,\r\n  REVENUE_CONTACT,\r\n  SELECT_STATUS,\r\n  ADD_COMPANY,\r\n  ERASE_COMPANY,\r\n  EDIT_COMPANY,\r\n  OPEN_MODAL,\r\n  CLOSE_MODAL,\r\n  M_NAME_INPUT,\r\n  M_INFO_INPUT,\r\n  M_CONTACT_INPUT\r\n} from \"./types\";\r\n\r\nexport const nameInput = input => {\r\n  return { type: NAME_INPUT, payload: input };\r\n};\r\n\r\nexport const infoInput = input => {\r\n  return { type: INFO_INPUT, payload: input };\r\n};\r\n\r\nexport const contactInput = input => {\r\n  return { type: CONTACT_INPUT, payload: input };\r\n};\r\n\r\nexport const revenueInput = input => {\r\n  return { type: REVENUE_CONTACT, payload: input };\r\n};\r\n\r\nexport const selectStatus = input => {\r\n  return { type: SELECT_STATUS, payload: input };\r\n};\r\n\r\nexport const addCompany = (\r\n  e,\r\n  company,\r\n  name,\r\n  info,\r\n  contact,\r\n  revenue,\r\n  status\r\n) => {\r\n  e.preventDefault();\r\n  const newCompany = {\r\n    id: company.length,\r\n    companyName: name,\r\n    status: status,\r\n    companyInfo: info,\r\n    keyContacts: contact,\r\n    financialPerformance: revenue\r\n  };\r\n  const nCompany = company.concat(newCompany);\r\n  return { type: ADD_COMPANY, payload: nCompany };\r\n};\r\n\r\nexport const eraseCompany = id => {\r\n  return {\r\n    type: ERASE_COMPANY,\r\n    payload: id\r\n  };\r\n};\r\n\r\nexport const editCompany = (e, id) => {\r\n  e.preventDefault();\r\n  return { type: EDIT_COMPANY, payload: id };\r\n};\r\n\r\nexport const openModal = ({ id, name }) => {\r\n  return { type: OPEN_MODAL, payload: { id, name } };\r\n};\r\n\r\nexport const closeModal = ({ event, close }) => {\r\n  event.preventDefault();\r\n  return { type: CLOSE_MODAL, payload: { close } };\r\n};\r\n\r\n//modal inputs\r\nexport const mNameInput = input => {\r\n  return { type: M_NAME_INPUT, payload: input };\r\n};\r\n\r\nexport const mInfoInput = input => {\r\n  return { type: M_INFO_INPUT, payload: input };\r\n};\r\nexport const mContactInput = input => {\r\n  return { type: M_CONTACT_INPUT, payload: input };\r\n};\r\n","export const INFO_INPUT = \"INFO_INPUT\";\r\nexport const NAME_INPUT = \"NAME_INPUT\";\r\nexport const CONTACT_INPUT = \"CONTACT_INPUT\";\r\nexport const REVENUE_CONTACT = \"REVENUE_CONTACT\";\r\nexport const SELECT_STATUS = \"SELECT_STATUS\";\r\nexport const ADD_COMPANY = \"ADD_COMPANY\";\r\nexport const ERASE_COMPANY = \"ERASE_COMPANY\";\r\nexport const EDIT_COMPANY = \"EDIT_COMPANY\";\r\nexport const OPEN_MODAL = \"OPEN_MODAL\";\r\nexport const CLOSE_MODAL = \"CLOSE_MODAL\";\r\nexport const M_NAME_INPUT = \"M_NAME_INPUT\";\r\nexport const M_INFO_INPUT = \"M_INFO_INPUT\";\r\nexport const M_CONTACT_INPUT = \"M_CONTACT_INPUT\";\r\n","import React, { Component } from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  closeModal,\r\n  editCompany,\r\n  mNameInput,\r\n  mInfoInput,\r\n  mContactInput,\r\n  selectStatus\r\n} from \"../actions/companyActions\";\r\n\r\nimport \"../App.css\";\r\n\r\nclass Modal extends Component {\r\n  renderModal = () => {\r\n    if (this.props.modalName === \"report\") {\r\n      return (\r\n        <div\r\n          style={styles.container}\r\n          className={this.props.isOpen ? \"open\" : \"close\"}\r\n        >\r\n          <div className=\"edit-modal\">\r\n            <h1 style={styles.titlebottomPad}>Company Dashboard</h1>\r\n            <Bar\r\n              data={{\r\n                labels: [\"2016\", \"2017\", \"2018\"],\r\n                datasets: [\r\n                  {\r\n                    label: \"Revenue Total Each Year\",\r\n                    data: [3000, 9901, 1700],\r\n                    backgroundColor: [\"#2785C3\", \"#2785C3\", \"#2785C3\"]\r\n                  }\r\n                ]\r\n              }}\r\n              options={{\r\n                scales: {\r\n                  yAxes: [\r\n                    {\r\n                      ticks: {\r\n                        beginAtZero: true\r\n                      }\r\n                    }\r\n                  ]\r\n                }\r\n              }}\r\n            />\r\n            <button\r\n              className=\"buttonForm\"\r\n              onClick={e => this.props.closeModal({ event: e, close: false })}\r\n            >\r\n              Close\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else if (this.props.modalName === \"edit\") {\r\n      return (\r\n        <div\r\n          style={styles.container}\r\n          className={this.props.isOpen ? \"open\" : \"close\"}\r\n        >\r\n          <div className=\"edit-modal\">\r\n            <h1 style={styles.titlebottomPad}>Company Dashboard</h1>\r\n            <form>\r\n              <input\r\n                className=\"inputStyle\"\r\n                type=\"text\"\r\n                placeholder=\"Company Name\"\r\n                name=\"mName\"\r\n                value={this.props.mName}\r\n                onChange={text => this.props.mNameInput(text.target.value)}\r\n              />\r\n              <br />\r\n              <input\r\n                className=\"inputStyle\"\r\n                type=\"text\"\r\n                placeholder=\"Company Info\"\r\n                name=\"info\"\r\n                value={this.props.mInfo}\r\n                onChange={text => this.props.mInfoInput(text.target.value)}\r\n              />\r\n              <br />\r\n              <input\r\n                className=\"inputStyle\"\r\n                type=\"text\"\r\n                placeholder=\"Company Contact\"\r\n                name=\"contact\"\r\n                value={this.props.mContact}\r\n                onChange={text => this.props.mContactInput(text.target.value)}\r\n              />\r\n              <br />\r\n              <div style={styles.statusContainer}>\r\n                <p style={styles.statusStyle}>Status: </p>\r\n                <select\r\n                  style={styles.dropdownStyle}\r\n                  onChange={selection =>\r\n                    this.props.selectStatus(selection.target.value)\r\n                  }\r\n                >\r\n                  {this.props.status.map((item, index) => (\r\n                    <option key={index}>{item}</option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n              <button\r\n                className=\"buttonForm\"\r\n                onClick={e => this.props.editCompany(e, this.props.id)}\r\n              >\r\n                Update Company\r\n              </button>\r\n              <br />\r\n              <button\r\n                className=\"buttonForm\"\r\n                onClick={e => this.props.closeModal({ event: e, close: false })}\r\n              >\r\n                Cancel\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  render() {\r\n    console.log(this.props.name);\r\n    return this.renderModal();\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    company: state.input.company,\r\n    isOpen: state.input.isOpen,\r\n    modalName: state.input.modalName,\r\n    id: state.input.id,\r\n    mName: state.input.mName,\r\n    mInfo: state.input.mInfo,\r\n    mContact: state.input.mContact,\r\n    status: state.input.status\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    closeModal,\r\n    editCompany,\r\n    mNameInput,\r\n    mInfoInput,\r\n    mContactInput,\r\n    selectStatus\r\n  }\r\n)(Modal);\r\n\r\nconst styles = {\r\n  container: {\r\n    backgroundColor: \"rgb(33, 141, 212, .3)\",\r\n    position: \"fixed\",\r\n    top: 0,\r\n    bottom: 0,\r\n    width: \"70%\",\r\n    paddingTop: \"10%\",\r\n    paddingLeft: \"20%\"\r\n  },\r\n  titlebottomPad: { marginBottom: 20 },\r\n  statusContainer: {\r\n    display: \"flex\",\r\n    width: \"100%\",\r\n    fontSize: 18\r\n  },\r\n  dropdownStyle: {\r\n    width: \"50%\",\r\n    padding: 10,\r\n    fontSize: 18,\r\n    borderWidth: 0.5,\r\n    borderColor: \"#000\",\r\n    marginBottom: 20\r\n  },\r\n  statusStyle: { width: \"35%\", padding: 10 }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  eraseCompany,\r\n  editCompany,\r\n  openModal\r\n} from \"../actions/companyActions\";\r\n\r\nimport \"../App.css\";\r\n\r\nclass Company extends Component {\r\n  statusColor = status => {\r\n    switch (status) {\r\n      case \"approved\":\r\n        return \"status-green\";\r\n      case \"pending approval\":\r\n        return \"status-orange\";\r\n      case \"declined\":\r\n        return \"status-red\";\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div style={styles.container}>\r\n        {this.props.companies.map((company, index) => (\r\n          <div key={company.id}>\r\n            <h1 style={styles.elementBottomPad}>{company.companyName}</h1>\r\n            <div style={styles.elementBottomPad}>\r\n              <p style={styles.textContainer}>{company.companyInfo}</p>\r\n              <p style={styles.textContainer}>\r\n                <span className=\"bold-span\">HR Contacts:</span>{\" \"}\r\n                {company.keyContacts}\r\n              </p>\r\n              <p style={styles.textContainer}>\r\n                <span className=\"bold-span\">Status:</span>{\" \"}\r\n                <span className={this.statusColor(company.status)}>\r\n                  {company.status}\r\n                </span>\r\n              </p>\r\n              <p style={styles.textContainer}>\r\n                <span className=\"bold-span\">Financial Performance: </span>\r\n                <i\r\n                  className=\"fas fa-clipboard icon-report\"\r\n                  onClick={() =>\r\n                    this.props.openModal({ id: company.id, name: \"report\" })\r\n                  }\r\n                />\r\n              </p>\r\n            </div>\r\n            <div className=\"icons\">\r\n              <i\r\n                className=\"fas fa-trash-alt icon\"\r\n                onClick={() => this.props.eraseCompany(company.id)}\r\n              />\r\n              <i\r\n                className=\"fas fa-user-edit icon\"\r\n                onClick={() =>\r\n                  this.props.openModal({ id: company.id, name: \"edit\" })\r\n                }\r\n              />\r\n            </div>\r\n            <hr />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    companies: state.input.company\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { eraseCompany, editCompany, openModal }\r\n)(Company);\r\n\r\nconst styles = {\r\n  container: {\r\n    width: \"50%\",\r\n    padding: 10,\r\n    margin: 10\r\n  },\r\n  textContainer: {\r\n    textAlign: \"left\",\r\n    fontSize: 18,\r\n    lineHeight: 1.7\r\n  },\r\n  elementBottomPad: {\r\n    paddingBottom: 20\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  nameInput,\r\n  infoInput,\r\n  contactInput,\r\n  revenueInput,\r\n  selectStatus,\r\n  addCompany\r\n} from \"../actions/companyActions\";\r\nimport Modal from \"./Modal\";\r\nimport Company from \"./Company\";\r\nimport \"../App.css\";\r\n\r\nclass CompanyForm extends Component {\r\n  render() {\r\n    const {\r\n      companies,\r\n      name,\r\n      info,\r\n      contact,\r\n      revenue,\r\n      status,\r\n      stat\r\n    } = this.props;\r\n    return (\r\n      <>\r\n        <div style={styles.container}>\r\n          <h1 style={styles.bottomPad}>Company Dashboard</h1>\r\n          <form>\r\n            <input\r\n              className=\"inputStyle\"\r\n              type=\"text\"\r\n              placeholder=\"Company Name\"\r\n              name=\"name\"\r\n              value={name}\r\n              onChange={text => this.props.nameInput(text.target.value)}\r\n            />\r\n            <br />\r\n            <textarea\r\n              className=\"inputStyle\"\r\n              placeholder=\"Company Info\"\r\n              name=\"info\"\r\n              value={info}\r\n              onChange={text => this.props.infoInput(text.target.value)}\r\n            />\r\n            <br />\r\n            <input\r\n              className=\"inputStyle\"\r\n              type=\"text\"\r\n              placeholder=\"Company Contact\"\r\n              name=\"contact\"\r\n              value={contact}\r\n              onChange={text => this.props.contactInput(text.target.value)}\r\n            />\r\n            <br />\r\n            <input\r\n              className=\"inputStyle\"\r\n              type=\"text\"\r\n              placeholder=\"Enter Last 3 Years Separated By Comma\"\r\n              name=\"revenue\"\r\n              onChange={text =>\r\n                this.props.revenueInput(\r\n                  text.target.value.split(\",\").map(Number)\r\n                )\r\n              }\r\n            />\r\n            <br />\r\n            <div style={styles.dropdownStyle}>\r\n              <p style={styles.statusStyle}>Status: </p>\r\n              <select\r\n                style={styles.dropdown}\r\n                onChange={selection =>\r\n                  this.props.selectStatus(selection.target.value)\r\n                }\r\n              >\r\n                {status.map((item, index) => (\r\n                  <option key={index}>{item}</option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            <button\r\n              className=\"buttonForm\"\r\n              onClick={e =>\r\n                this.props.addCompany(\r\n                  e,\r\n                  companies,\r\n                  name,\r\n                  info,\r\n                  contact,\r\n                  revenue,\r\n                  stat\r\n                )\r\n              }\r\n            >\r\n              Add Company\r\n            </button>\r\n            <br />\r\n          </form>\r\n        </div>\r\n        <Company />\r\n        <Modal />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    companies: state.input.company,\r\n    name: state.input.name,\r\n    info: state.input.info,\r\n    contact: state.input.contact,\r\n    revenue: state.input.revenue,\r\n    status: state.input.status,\r\n    stat: state.input.stat\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { nameInput, infoInput, contactInput, revenueInput, selectStatus, addCompany }\r\n)(CompanyForm);\r\n\r\nconst styles = {\r\n  container: {\r\n    width: \"50%\",\r\n    padding: 10,\r\n    borderRightStyle: \"solid\",\r\n    borderRightColor: \"#000\",\r\n    borderRightWidth: 1,\r\n    backgroundColor: \"#A7AAAD\"\r\n  },\r\n  bottomPad: { marginBottom: 20 },\r\n  dropdownStyle: {\r\n    display: \"flex\",\r\n    width: \"100%\",\r\n    fontSize: 18\r\n  },\r\n  statusStyle: { width: \"35%\", padding: 10 },\r\n  dropdown: {\r\n    width: \"50%\",\r\n    padding: 10,\r\n    fontSize: 18,\r\n    borderWidth: 0.5,\r\n    borderColor: \"#000\",\r\n    marginBottom: 20\r\n  }\r\n};\r\n","import {\r\n  NAME_INPUT,\r\n  INFO_INPUT,\r\n  CONTACT_INPUT,\r\n  REVENUE_CONTACT,\r\n  SELECT_STATUS,\r\n  ADD_COMPANY,\r\n  ERASE_COMPANY,\r\n  EDIT_COMPANY,\r\n  OPEN_MODAL,\r\n  CLOSE_MODAL,\r\n  M_NAME_INPUT,\r\n  M_INFO_INPUT,\r\n  M_CONTACT_INPUT\r\n} from \"../actions/types\";\r\nimport { companies, status } from \"../companies\";\r\n\r\nconst INITIAL_STATE = {\r\n  company: companies,\r\n  id: 0,\r\n  name: \"\",\r\n  info: \"\",\r\n  contact: \"\",\r\n  status: status,\r\n  stat: \"researching\",\r\n  revenue: \"\",\r\n  isOpen: false,\r\n  modalName: \"\",\r\n  mName: \"\",\r\n  mInfo: \"\",\r\n  mContact: \"\"\r\n};\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  console.log(state);\r\n  switch (action.type) {\r\n    case NAME_INPUT:\r\n      return { ...state, name: action.payload };\r\n    case INFO_INPUT:\r\n      return { ...state, info: action.payload };\r\n    case CONTACT_INPUT:\r\n      return { ...state, contact: action.payload };\r\n    case REVENUE_CONTACT:\r\n      return { ...state, revenue: action.payload };\r\n    case SELECT_STATUS:\r\n      return { ...state, stat: action.payload };\r\n    case ADD_COMPANY:\r\n      return {\r\n        ...state,\r\n        name: \"\",\r\n        info: \"\",\r\n        revenue: [],\r\n        contact: \"\",\r\n        stat: \"researching\",\r\n        company: action.payload\r\n      };\r\n    case ERASE_COMPANY:\r\n      return {\r\n        ...state,\r\n        company: state.company.filter(item => item.id !== action.payload)\r\n      };\r\n    case EDIT_COMPANY:\r\n      return {\r\n        ...state,\r\n        company: state.company.map(item => {\r\n          let obj = {\r\n            id: action.payload,\r\n            companyName: state.mName,\r\n            status: state.stat,\r\n            companyInfo: state.mInfo,\r\n            keyContacts: state.mContact,\r\n            financialPerformance: item.financialPerformance\r\n          };\r\n          if (item.id === action.payload) {\r\n            item = obj;\r\n            return item;\r\n          }\r\n          return item;\r\n        }),\r\n        isOpen: false,\r\n        mName: \"\",\r\n        mInfo: \"\",\r\n        mContact: \"\"\r\n      };\r\n    case OPEN_MODAL:\r\n      return {\r\n        ...state,\r\n        isOpen: true,\r\n        modalName: action.payload.name,\r\n        id: action.payload.id\r\n      };\r\n    case CLOSE_MODAL:\r\n      return { ...state, isOpen: action.payload.close };\r\n    case M_NAME_INPUT:\r\n      return { ...state, mName: action.payload };\r\n    case M_INFO_INPUT:\r\n      return { ...state, mInfo: action.payload };\r\n    case M_CONTACT_INPUT:\r\n      return { ...state, mContact: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const companies = [\r\n    {\r\n        id: 0,\r\n        companyName:\"Tech Unlimited\",\r\n        status:\"researching\",\r\n        companyInfo:\"A company that provide is customers amazing softeware using any technology fit for the job\",\r\n        keyContacts:\"Jim Smith\",\r\n        financialPerformance:[300000, 330000, 470000]\r\n    },\r\n    {\r\n        id: 1,\r\n        companyName:\"Sky Net\",\r\n        status:\"pending approval\",\r\n        companyInfo:\"Sky Net is the leading builder in technology infustructure.\",\r\n        keyContacts:\"Kathy Smith\",\r\n        financialPerformance:[250000, 400000, 240000]\r\n    },\r\n    {\r\n        id: 2,\r\n        companyName:\"AR Store\",\r\n        status:\"approved\",\r\n        companyInfo:\"AR Store is the first comapny to launch an online shopping experience from home.\",\r\n        keyContacts:\"Tim Gray\",\r\n        financialPerformance:[500000, 580000, 730000]\r\n    },\r\n    {\r\n        id: 3,\r\n        companyName:\"Real Tech\",\r\n        status:\"declined\",\r\n        companyInfo:\"Real Tech is a leader in producing one of mobile's fastest processors.\",\r\n        keyContacts:\"Lisa Thompson\",\r\n        financialPerformance:[700000, 500000, 830000]\r\n    },\r\n    {\r\n        id: 4,\r\n        companyName:\"Dev Games\",\r\n        status:\"pending approval\",\r\n        companyInfo:\"Dev Games is a software company with the number 1 first person shooter.\",\r\n        keyContacts:\"Tony Moore\",\r\n        financialPerformance:[200000, 500000, 430000],\r\n    }\r\n]\r\n\r\nexport const status = [\r\n    \"researching\",\"pending approval\",\"approved\", \"declined\"\r\n]","import { combineReducers } from \"redux\";\r\nimport inputReducer from \"./inputReducer\";\r\n\r\nexport default combineReducers({\r\n  input: inputReducer\r\n});\r\n","import React, { Component } from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore } from \"redux\";\r\n\r\nimport \"./App.css\";\r\nimport CompanyForm from \"./components/CompanyForm\";\r\nimport reducers from \"./reducers/index\";\r\n\r\nconst store = createStore(reducers, {});\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <div className=\"App\">\r\n          <CompanyForm />\r\n        </div>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}